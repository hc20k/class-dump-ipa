#!/usr/bin/env python3
# class-dump-ipa v1.1 by @hc20k

import os
import sys
import zipfile
import tempfile
from pathlib import Path
import plistlib
import argparse
import subprocess

def dump_headers(ipa_path, header_dir, open_in_finder=False):
    # Unzip to temp directory
    print(f"[-] Unzipping IPA @ {ipa_path}")
    extract_dir = tempfile.TemporaryDirectory().name
    
    with zipfile.ZipFile(ipa_path, 'r') as ipa_zip:
        ipa_zip.extractall(extract_dir)
        print('[+] Finished extracting.')

    # Dump main executable
    for plist in Path(f'{extract_dir}/Payload/').glob('*/Info.plist'):
        with open(plist, 'rb') as fp:
            app_folder = os.path.dirname(plist)
            info = plistlib.load(fp)
            executable = info["CFBundleExecutable"]

            print(f"[-] Dumping main executable: {executable}")
            dumper = subprocess.run(["class-dump", "-H", os.path.join(app_folder,executable), "-o", header_dir])
            dumper.check_returncode()
            break
    
    # Dump frameworks
    for plist in Path(f'{app_folder}/Frameworks/').glob('*/Info.plist'):
        with open(plist, 'rb') as fp:
            framework_folder = os.path.dirname(plist)
            info = plistlib.load(fp)
            executable = info['CFBundleExecutable']

            print(f"[-] Dumping framework: {executable}")
            dumper = subprocess.run(["class-dump", "-H", os.path.join(framework_folder,executable), "-o", header_dir])
            dumper.check_returncode()
    
    print("[+] Dumping complete!")

    if open_in_finder:
        print('[-] Opening in Finder...')
        subprocess.run(["open",extract_dir])
    


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Dumps headers from a decrypted .ipa and its frameworks.")
    parser.add_argument("ipa_path", help="The path to the decrypted .ipa file you wish to dump.")
    parser.add_argument("output_path", help="The path to the directory the header files will be dumped to.")
    parser.add_argument("-o", help="Open app folder in Finder when done.", action="store_true")
    args = parser.parse_args()
    dump_headers(args.ipa_path, args.output_path, args.o)
